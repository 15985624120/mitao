{"remainingRequest":"E:\\桌面\\nectarine\\nectarine_isweb\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\桌面\\nectarine\\nectarine_isweb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\桌面\\nectarine\\nectarine_isweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\桌面\\nectarine\\nectarine_isweb\\src\\views\\index.vue?vue&type=template&id=a83bd3b0&","dependencies":[{"path":"E:\\桌面\\nectarine\\nectarine_isweb\\src\\views\\index.vue","mtime":1603719337440},{"path":"E:\\桌面\\nectarine\\nectarine_isweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\桌面\\nectarine\\nectarine_isweb\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\桌面\\nectarine\\nectarine_isweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\桌面\\nectarine\\nectarine_isweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}